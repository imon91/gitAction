plugins {
    id 'java'
}

group 'UiTests'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {

//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // https://mvnrepository.com/artifact/org.testng/testng
    implementation group: 'org.testng', name: 'testng', version: '6.14.3'
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    // https://mvnrepository.com/artifact/io.appium/java-client
    implementation group: 'io.appium', name: 'java-client', version: '7.3.0'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    // https://mvnrepository.com/artifact/io.rest-assured/rest-assured
    implementation group: 'io.rest-assured', name: 'rest-assured', version: '4.2.0'

    // https://mvnrepository.com/artifact/io.cucumber/cucumber-java
    implementation group: 'io.cucumber', name: 'cucumber-java', version: '6.10.3'
    // https://mvnrepository.com/artifact/io.cucumber/cucumber-testng
    implementation group: 'io.cucumber', name: 'cucumber-testng', version: '6.10.3'

    // Including Core module as dependency
    implementation project(path : ':core')
}

//test {
//    useJUnitPlatform()
//}

test{
    useTestNG(){
        useDefaultListeners = true
        systemProperties project.properties.subMap(["Host","Device","Version","App","Env","Trigger"])
    }
}


task deliveryAgentsAppTest(type: Test) {// we define a task with name ‘androiduiTest’
    useTestNG() {
        useDefaultListeners = true
        scanForTestClasses = false
        //jvmArgs(["-Ddataproviderthreadcount=${threads}"])
        testLogging.showStandardStreams = true
        systemProperties project.properties.subMap(["Host","Device","Version","App","Env","Trigger"])
        def smoke = project.hasProperty("Smoke")
        def regression = project.hasProperty("Reg")
        def sanity = project.hasProperty("Sanity")

        if(smoke) {
            suites "src/test/resources/mySuites/smokeSuite.xml"
        }
        if(sanity) {
            suites "src/test/resources/mySuites/sanitySuite.xml"
        }
        if(regression){
            suites "src/test/resources/mySuites/regressionSuite.xml"
        }
    }
}


task deliveryAgentsAppDebug(type: Test) {
    useTestNG() {
        useDefaultListeners = true
        scanForTestClasses = false
        //jvmArgs(["-Ddataproviderthreadcount=${threads}"])
        testLogging.showStandardStreams = true
        systemProperties project.properties.subMap(["Host","Device","Version","App","Env","Trigger"])
        suites "src/test/resources/mySuites/debugSuite.xml"
    }

}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

//task cucumber(type: Test) {
//    useTestNG(){
//        useDefaultListeners = true
//        systemProperties project.properties.subMap(["Host","Device","Version","App","Env","Trigger"])
//        suites "src/test/resources/mySuites/sanitySuite.xml"
//    }
//}

task cucumber(type: Test) {
    dependsOn assemble, compileTestJava
//    useTestNG(){
//        useDefaultListeners = true
//        systemProperties project.properties.subMap(["Host","Device","Version","App","Env","Trigger"])
//        suites "src/test/resources/mySuites/sanitySuite.xml"
//    }
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'stepDefinitions', 'src/test/resources/features']
        }
    }
}